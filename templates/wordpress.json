{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "annotations": {
      "description": "This is an instant-app for wordpress",
      "iconClass": "icon-php",
      "tags": "instant-app,wordpress,php,mysql"
    },
    "name": "wordpress",
    "creationTimestamp": null
  },
  "objects": [
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "app": "${NAME}"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling",
          "rollingParams": {
            "updatePeriodSeconds": 1,
            "intervalSeconds": 1,
            "timeoutSeconds": 600,
            "maxUnavailable": "25%",
            "maxSurge": "25%"
          },
          "resources": {}
        },
        "triggers": [
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "test": false,
        "selector": {
          "app": "${NAME}",
          "deploymentconfig": "${NAME}"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "${NAME}",
              "deploymentconfig": "${NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [
                  {
                    "name": "DATABASE_SERVICE_NAME",
                    "value": "${DATABASE_SERVICE_NAME}"
                  },
                  {
                    "name": "WORDPRESS_DB_NAME",
                    "value": "${DATABASE_NAME}"
                  },
                  {
                    "name": "WORDPRESS_DB_USER",
                    "value": "${DATABASE_USER}"
                  },
                  {
                    "name": "WORDPRESS_DB_PASSWORD",
                    "value": "${DATABASE_PASSWORD}"
                  }
                ],
                "name": "${NAME}",
                "image": "docker.io/thedigitalgarage/wordpress:latest",
                "imagePullPolicy": "Always",
                "ports": [
                  {
                    "containerPort": 8080
                  }
                ],
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "${NAME}-volume-1",
                    "mountPath": "/var/www/html"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "securityContext": {},
            "volumes": [
              {
                "name": "${NAME}-volume-1",
                "emptyDir": {}
              }
            ]
          }
        }
      },
      "status": {}
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "host": "",
        "to": {
          "kind": "Service",
          "name": "${NAME}"
        },
        "port": {
          "targetPort": "8080"
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "creationTimestamp": null,
        "labels": {
          "app": "${NAME}"
        },
        "annotations": {
          "openshift.io/generated-by": "OpenShiftNewApp"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "8080",
            "port": 8080,
            "targetPort": 80
          }
        ],
        "selector": {
          "app": "${NAME}",
          "deploymentconfig": "${NAME}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      },
      "status": {
        "loadBalancer": {}
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Exposes the database server"
        },
        "creationTimestamp": null
      },
      "spec": {
        "ports": [
          {
            "name": "mysql",
            "port": 3306,
            "targetPort": 3306
          }
        ],
        "selector": {
          "name": "${DATABASE_SERVICE_NAME}"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Defines how to deploy the database"
        },
        "creationTimestamp": null
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${DATABASE_SERVICE_NAME}"
        },
        "template": {
          "metadata": {
            "name": "${DATABASE_SERVICE_NAME}",
            "creationTimestamp": null,
            "labels": {
              "name": "${DATABASE_SERVICE_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "mysql",
                "image": "openshift/mysql-55-centos7",
                "ports": [
                  {
                    "containerPort": 3306
                  }
                ],
                "env": [
                  {
                    "name": "MYSQL_USER",
                    "value": "${DATABASE_USER}"
                  },
                  {
                    "name": "MYSQL_PASSWORD",
                    "value": "${DATABASE_PASSWORD}"
                  },
                  {
                    "name": "MYSQL_DATABASE",
                    "value": "${DATABASE_NAME}"
                  }
                ],
                "volumeMounts": [
                  {
                    "name": "${DATABASE_SERVICE_NAME}-data",
                    "mountPath": "/var/lib/mysql/data"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "imagePullPolicy": "Always",
                "capabilities": {},
                "securityContext": {
                  "capabilities": {},
                  "privileged": false
                }
              }
            ],
            "volumes": [
              {
                "name": "${DATABASE_SERVICE_NAME}-data",
                "emptyDir": {
                  "medium": ""
                }
              }
            ],
            "restartPolicy": "Always",
            "dnsPolicy": "ClusterFirst"
          }
        }
      },
      "status": {}
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "value": "wordpress",
      "required": true
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the Wordpress service, if left blank a value will be defaulted",
      "value": ""
    },
    {
      "name": "DATABASE_SERVICE_NAME",
      "displayName": "Database Service Name",
      "description": "The name of the OpenShift Service exposed for the database.",
      "value": "mysql",
      "required": true
    },
    {
      "name": "DATABASE_NAME",
      "displayName": "MySQL Database Name",
      "description": "Name of the MySQL database accessed.",
      "value": "wordpress",
      "required": true
    },
    {
      "name": "DATABASE_USER",
      "displayName": "MySQL User",
      "description": "Username for MySQL user that will be used for accessing the database.",
      "generate": "expression",
      "value": "wordpress",
      "from": "user[A-Z0-9]{3}",
      "required": true
    },
    {
      "name": "DATABASE_PASSWORD",
      "displayName": "MySQL Password",
      "description": "Password for the MySQL user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}",
      "value": "wordpress",
      "required": true
    }
  ]
}