# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: v1
kind: Template
metadata:
  annotations:
    description: An Instant-App for Wordpress
    iconClass: icon-php
    tags: instant-app,wordpress,php,mysql
  creationTimestamp: 2016-11-05T09:21:42Z
  name: wordpress-instant-app
  namespace: openshift
  resourceVersion: "6214751"
  selfLink: /oapi/v1/namespaces/openshift/templates/wordpress-instant-app
  uid: 43e56e43-a339-11e6-8ce6-22ac95594225
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: ${DATABASE_SERVICE_NAME}
          - name: WORDPRESS_DB_NAME
            value: ${DATABASE_NAME}
          - name: WORDPRESS_DB_USER
            value: ${DATABASE_USER}
          - name: WORDPRESS_DB_PASSWORD
            value: ${DATABASE_PASSWORD}
          image: docker.io/thedigitalgarage/wordpress:latest
          imagePullPolicy: Always
          name: ${NAME}
          ports:
          - containerPort: 8080
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/www/html
            name: ${NAME}-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: ${NAME}-volume-1
    test: false
    triggers:
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    host: ""
    port:
      targetPort: "8080"
    to:
      kind: Service
      name: ${NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    ports:
    - name: "8080"
      port: 8080
      targetPort: 80
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the database server
    creationTimestamp: null
    name: ${DATABASE_SERVICE_NAME}
  spec:
    ports:
    - name: mysql
      port: 3306
      targetPort: 3306
    selector:
      name: ${DATABASE_SERVICE_NAME}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the database
    creationTimestamp: null
    name: ${DATABASE_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${DATABASE_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${DATABASE_SERVICE_NAME}
        name: ${DATABASE_SERVICE_NAME}
      spec:
        containers:
        - capabilities: {}
          env:
          - name: MYSQL_USER
            value: ${DATABASE_USER}
          - name: MYSQL_PASSWORD
            value: ${DATABASE_PASSWORD}
          - name: MYSQL_DATABASE
            value: ${DATABASE_NAME}
          image: openshift/mysql-55-centos7
          imagePullPolicy: Always
          name: mysql
          ports:
          - containerPort: 3306
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: ${DATABASE_SERVICE_NAME}-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - emptyDir:
            medium: ""
          name: ${DATABASE_SERVICE_NAME}-data
    triggers:
    - type: ConfigChange
  status: {}
parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: wordpress-instant-app
- description: The exposed hostname that will route to the Wordpress service, if left
    blank a value will be defaulted
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
- description: The name of the OpenShift Service exposed for the database.
  displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: mysql
- description: Name of the MySQL database accessed.
  displayName: MySQL Database Name
  name: DATABASE_NAME
  required: true
  value: wordpress
- description: Username for MySQL user that will be used for accessing the database.
  displayName: MySQL User
  from: user[A-Z0-9]{3}
  generate: expression
  name: DATABASE_USER
  required: true
  value: wordpress
- description: Password for the MySQL user.
  displayName: MySQL Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: DATABASE_PASSWORD
  required: true
  value: wordpress
